apiVersion: v1
kind: Service
metadata:
  name: traefik
  labels:
    app.kubernetes.io/name: traefik
spec:
  selector:
    app.kubernetes.io/name: traefik
  ports:
  - port: 9000
    name: traefik
    targetPort: "traefik"
  - port: 80
    name: web
    targetPort: "web"
  - port: 443
    name: websecure
    targetPort: "websecure"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  labels:
    app.kubernetes.io/name: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: traefik
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: traefik
    spec:
      nodeSelector:
        ingressProxy: "true"
      serviceAccountName: traefik
      terminationGracePeriodSeconds: 60
      hostNetwork: true
      containers:
      - image: traefik:2.2.1
        name: traefik
        resources:
          limits:
            cpu: 300m
            memory: 150Mi
          requests:
            cpu: 100m
            memory: 50Mi
        readinessProbe:
          httpGet:
            path: /ping
            port: 9000
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /ping
            port: 9000
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        ports:
        - name: "traefik"
          containerPort: 9000
          protocol: TCP
        - name: "web"
          containerPort: 80
          protocol: TCP
        - name: "websecure"
          containerPort: 443
          protocol: TCP
        securityContext:
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        volumeMounts:
          - name: data
            mountPath: /data
          - name: traefik-config
            mountPath: /config
        args:
          - --configfile=/config/traefik.yaml
      volumes:
        - name: data
          emptyDir: {}
        - name: traefik-config
          configMap:
            name: traefik-config
